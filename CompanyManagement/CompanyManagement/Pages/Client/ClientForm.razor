@page "/clients/{Action}"
@page "/clients/{Action}/{ClientId}"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<h3>Client form</h3>

@if (ClientState.Value.Client == null && !string.IsNullOrEmpty(ClientId))
{
    <p>Pas de client avec l'Id @ClientId</p>
}
else
{
    <button type="button" @onclick="@(async () => await RedirectToClientList())">Retour à la liste</button>

    <div>
        <EditForm Model="ClientState.Value.Client" OnValidSubmit="@SaveClient">
            <DataAnnotationsValidator />

            @* Name *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Client.Name)">Nom :</label>
                <InputText @bind-Value="@ClientState.Value.Client.Name" />
            </div>

            @* Email *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Client.Email)">Email :</label>
                <InputText @bind-Value="@ClientState.Value.Client.Email" />
            </div>

            @* PhoneNumber *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Client.PhoneNumber)">Numéro de téléphone :</label>
                <InputText @bind-Value="@ClientState.Value.Client.PhoneNumber" />
            </div>

            @* Street *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Address.Street)">Rue :</label>
                <InputText @bind-Value="@ClientState.Value.Address.Street" />
            </div>

            @* ZipCode *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Address.ZipCode)">Code postal :</label>
                <InputText @bind-Value="@ClientState.Value.Address.ZipCode" />
            </div>

            @* City *@
            <div class="form-element">
                <label for="@nameof(ClientState.Value.Address.City)">Ville :</label>
                <InputText @bind-Value="@ClientState.Value.Address.City" />
            </div>

            @* Submit *@
            <div class="form-element">
                <Button Type="submit">Submit</Button>
            </div>

            @if (CanShowDeletedButton)
            {
                <div class="form-element">
                    <Button Type="button" @onclick="@(async () => await DeleteAsync())">Supprimer</Button>
                </div>
            }

        </EditForm>
    </div>
}